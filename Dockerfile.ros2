ARG FROM_IMAGE=ros:noetic-ros-base
ARG OVERLAY_WS=/home/yaskawa_ws
ARG OVERLAY_WS_ROS2=/home/ros1_bridge_ws


FROM $FROM_IMAGE 

# Usefull packages
RUN apt update -y \
    && apt upgrade -y \
    && apt install -y \
    python3-pip \
    git \
    python3-catkin-tools \ 
    ros-noetic-catkin \
    libblas-dev \ 
    liblapack-dev \ 
    && pip install vcstool 
    
################# Clone required repositories ######################
ARG OVERLAY_WS
WORKDIR $OVERLAY_WS/src


# Clone sun_yaskawa_ros
RUN echo "\
repositories: \n\
  sun_yaskawa_ros: \n\
    type: git \n\
    url: https://github.com/marcocostanzo/sun_yaskawa_ros.git \n\
    version: main \n\
" > ../overlay.repos
RUN vcs import ./ < ../overlay.repos

# Clone sun_robot_ros
RUN echo "\
repositories: \n\
  sun_robot_ros: \n\
    type: git \n\
    url: https://github.com/marcocostanzo/sun_robot_ros.git \n\
    version: master \n\
" > ../overlay.repos
RUN vcs import ./ < ../overlay.repos

# Clone sun_robot_lib
RUN echo "\
repositories: \n\
  sun_robot_lib: \n\
    type: git \n\
    url: https://github.com/marcocostanzo/sun_robot_lib.git \n\
    version: separate_clik \n\
" > ../overlay.repos
RUN vcs import ./ < ../overlay.repos

# Clone sun_math_toolbox
RUN echo "\
repositories: \n\
  sun_math_toolbox: \n\
    type: git \n\
    url: https://github.com/marcocostanzo/sun_math_toolbox.git \n\
    version: master \n\
" > ../overlay.repos
RUN vcs import ./ < ../overlay.repos


# Clone ros_toon
RUN echo "\
repositories: \n\
  ros_toon: \n\
    type: git \n\
    url: https://github.com/marcocostanzo/ros_toon.git \n\
    version: master \n\
" > ../overlay.repos
RUN vcs import ./ < ../overlay.repos

# Clone sun_ros_msgs
RUN echo "\
repositories: \n\
  sun_ros_msgs: \n\
    type: git \n\
    url: https://github.com/marcocostanzo/sun_ros_msgs.git \n\
    version: master \n\
" > ../overlay.repos
RUN vcs import ./ < ../overlay.repos

# Clone sun_traj_lib
RUN echo "\
repositories: \n\
  sun_traj_lib: \n\
    type: git \n\
    url: https://github.com/marcocostanzo/sun_traj_lib.git \n\
    version: master \n\
" > ../overlay.repos
RUN vcs import ./ < ../overlay.repos

######################################################


# copy manifests for caching
WORKDIR /opt
RUN mkdir -p /tmp/opt && \
    find ./ -name "package.xml" | \
      xargs cp --parents -t /tmp/opt && \
    find ./ -name "CATKIN_IGNORE" | \
      xargs cp --parents -t /tmp/opt || true


# install overlay dependencies
ARG OVERLAY_WS
WORKDIR $OVERLAY_WS
RUN . /opt/ros/$ROS_DISTRO/setup.sh && \
    apt-get update && rosdep install --from-paths src --ignore-src -r -y \
    && rm -rf /var/lib/apt/lists/* 

# build overlay source
RUN . /opt/ros/$ROS_DISTRO/setup.sh && \
    catkin build 

RUN echo "source devel/setup.bash" >> ~/.bashrc

# Install ROS2 Foxy for ros1_bridge
# Set locale
RUN  apt update && apt install locales \
    && locale-gen en_US en_US.UTF-8 \
    && update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8 \
    && export LANG=en_US.UTF-8

# Setup sources
RUN apt install software-properties-common -y \
    && add-apt-repository universe -y \
    && apt update && apt install curl -y \
    && curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg \
    && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null

# Install ROS2 package
RUN apt update -y \
    && apt upgrade -y \
    && DEBIAN_FRONTEND=noninteractive apt install ros-foxy-desktop python3-argcomplete -y 
RUN apt install ros-dev-tools -y 
    
# Install ros1_bridge
   

# Clone sun_traj_lib
ARG OVERLAY_WS_ROS2
WORKDIR $OVERLAY_WS_ROS2/src
RUN echo "\
repositories: \n\
  ros1_bridge: \n\
    type: git \n\
    url: https://github.com/ros2/ros1_bridge.git \n\
    version: foxy \n\
" > overlay.repos
RUN vcs import ./ < overlay.repos

ARG OVERLAY_WS_ROS2
WORKDIR $OVERLAY_WS_ROS2
RUN . /opt/ros/foxy/setup.sh \
    && colcon build --packages-select ros1_bridge --cmake-force-configure --cmake-args -DBUILD_TESTING=FALSE \
    && . install/setup.sh



